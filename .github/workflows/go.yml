name: Go

on:
  push:
    branches:
      - '*'

env:
  isNightly: ${{ contains(github.ref, 'dev') }}
  isFinalRelease: ${{ contains(github.ref, 'master') }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out source code
      uses: actions/checkout@v2

    - name: Compile for ARM
      run: make cross

    - name: Create Release Candidate
      if: env.isNightly == 'true'
      id: create_release_candidate
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest-rc
        release_name: latest-rc
        commitish: dev
        prerelease: true

    - name: Create Release
      if: env.isFinalRelease == 'true'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: latest
        commitish: master
        prerelease: false

    - name: Upload Release Asset
      if: env.isNightly == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_candidate.outputs.upload_url }}
        asset_path: ./dist/websocket-stream-server
        asset_name: websocket-stream-server
        asset_content_type: application/zip

    - name: Upload Release Asset
      if: env.isFinalRelease == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/websocket-stream-server
        asset_name: websocket-stream-server
        asset_content_type: application/zip   
